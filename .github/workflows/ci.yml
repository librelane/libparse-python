name: Build Wheels for PyPI

# Events that trigger workflow
on:
  push:
    branches:
      - "*"
  pull_request:

jobs:
  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        os:
          [
            {
              name: "Ubuntu 22.04",
              family: "linux",
              runner: "ubuntu-22.04",
              archs: "x86_64",
            },
            {
              name: "Ubuntu 22.04",
              family: "linux",
              runner: "ubuntu-22.04-arm",
              archs: "aarch64",
            },
            {
              name: "macOS 14",
              family: "macos",
              runner: "macos-14",
              archs: "x86_64,arm64",
            },
            {
              name: "Windows Server 2019",
              runner: "windows-2019",
              archs: "AMD64,ARM64",
            },
          ]
    name: Build Wheels | ${{ matrix.os.name }} | ${{ matrix.os.archs }}
    runs-on: ${{ matrix.os.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: false
      - uses: actions/setup-python@v5
      - if: ${{ matrix.os.family == 'macos' && matrix.os.archs == 'arm64' }}
        name: "[macOS/arm64] Install Python 3.8 (see: https://cibuildwheel.pypa.io/en/stable/faq/#macos-building-cpython-38-wheels-on-arm64)"
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.1
        env:
          # * APIs not supported by PyPy
          # * Musllinux disabled because it increases build time from 48m to ~3h
          CIBW_ARCHS: ${{ matrix.os.archs }}
          CIBW_BUILD_VERBOSITY: "1"
          # manylinux2014 (default) does not have a modern enough C++ compiler for Yosys
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
      - uses: actions/upload-artifact@v4
        with:
          name: python-wheels-${{ matrix.os.runner }}
          path: ./wheelhouse/*.whl
  upload_wheels:
    name: Upload Wheels
    runs-on: ubuntu-latest
    # Specifying a GitHub environment is optional, but strongly encouraged
    environment: pypi
    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write
    needs: build_wheels
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: "."
          pattern: python-wheels-*
          merge-multiple: true
      - run: |
          ls
          mkdir -p ./dist
          mv *.whl ./dist
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
